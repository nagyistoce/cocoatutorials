#!/usr/bin/perl -w

use Proc::Background;
our $CD = "/Applications/CocoaDialog.app/Contents/MacOS/CocoaDialog";

##
# make sure the photos have the correct dates
system("exiv2 -T *.jpg *.JPG *.jpeg *.JPEG >/dev/null 2>&1") ;

##
# println - print a string and new line
sub println
{
	my $x = shift ;
	print $x . "\n" ;
}

##
# psystem print a command and execute it
sub psystem
{
	my $x = shift ;
	println($x);
	system($x) ;
}

##
# custom sort routine
sub by_last_mod {
  	# vars $a and $b automatically passed in

  	# perl function 'stat' returns array of info on a file
  	# 10th element of the stat array is last modified date,
  	# returned as number of seconds since 1/1/1970.
  	my $adate = (stat($a))[9]; # get last modified date
  	my $bdate = (stat($b))[9]; # get last modified date

  	return $adate <=> $bdate;
}

##################
## main program ##
##################

##
# set up default arguments and globals
my @args = @ARGV ? @ARGV : ("*.jpg") ;
my %photodict ;
my $photo ;

##
# go over the args and find the photos
foreach my $arg ( @args ) {
	if ( -e $arg ) {
		$photo             = $arg   ;
  	 	$photodict{$photo} = $photo ;
  	} else {
  		@args = glob($arg) ;
  		foreach $photo (@args)  {
  	 		$photodict{$photo} = $photo ;
  		}
  	}
}

##
# now create an array of photos
my @photos ;
foreach $photo ( keys %photodict ) {
	push @photos,$photo ;
}
foreach $photo (sort by_last_mod @photos)  {
	println("photo = $photo") ;
}
# exit(1) ;

##
# thumbnail and rename the photos
foreach $photo (sort by_last_mod @photos)  {
	psystem("cp \"$photo\" \"/Users/rmills/temp/$photo\"") ;
	psystem("sips --resampleHeight 300 \"/Users/rmills/temp/$photo\"") ; 

	# display it
	#   my $proc = Proc::Background->new('/Applications/Preview.app/Contents/MacOS/Preview 			"' . /Users/rmills/temp/$photo . '"');
	my $proc = Proc::Background->new('open "' . $photo . '"');
	# sleep(1);

	# ask the user
	my $rv = `$CD standard-inputbox --title "Your Name" --no-newline \\
    				--informative-text "Title:" --float     ` ;

	# deal with the outcome
	my ($button_rv, $newname) = split /\n/, $rv, 2;
	if ($button_rv == 1) {
		$newname = $newname . ".jpg" ;
		print "rename $photo $newname\n"    ; # print it
		rename($photo,$newname) ;
		system('killall Preview') ;
	}

	# remove the photo from the display
	$proc->die;
	exit(1) if $button_rv == 2 ;
}




