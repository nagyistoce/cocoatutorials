#!/usr/bin/perl

# use strict;
# use warnings;

use XML::Parser::Expat;
use File::Basename;
use Math::Trig;

###############################
# syntax
sub syntax
{
	error("usage: readcollage <collage.cxf> Width Height") ;
}
# Description of program at end of file
###############################


# global variables
#
my $x,$y,$w,$h,$t,$p,$s ; # position and photo name
my $src = 0				; # boolean - are we in <src>....</src>?
my @map					;
my $pi = 4.0*atan(1.0)	; # simple simon


# the main program
#
my $filename = shift or syntax() ;
my $W		 = shift or syntax() ;
my $H		 = shift or syntax() ;

# perl at its most powerful and horrible
#
my($file, $dirs, $ext) = fileparse($filename,qr/\.[^.]*/);

$W = atoi($W) ;
$H = atoi($H) ;
exit 1 if $W == 0 || $H == 0 ;

# open and parse the CXF file
#
$ext = '.cxf' ;
$filename .= $ext if ( ! -e $filename && -e $filename . $ext ) ;
open(FOO, $filename) or error("Couldn't open file $filename") ; 
$parser = new XML::Parser::Expat;
$parser->setHandlers('Start' => \&sh,'End' => \&eh,'Char'  => \&ch) ;
$parser->parse(*FOO);
close(FOO);

# output the map
#
println("<img class=\"home\" src=\"${file}.jpg\" usemap=\"#${file}\">") ;
println("<map id=\"$file\" name=\"$file\">") ;
foreach $line (reverse(@map)) { println($line) } ;
println("</map>") ;


###############################
# push a <poly> into the map
sub poly
{
	my $W = shift ;
	my $H = shift ;
	my $x = shift ;
	my $y = shift ;
	my $w = shift ;
	my $h = shift ;
	my $t = shift ;
	my $p = shift ;
	my $s = shift ;
	
	
	
	
#	println('p = '	# . $p
#		  . ' x = ' . $x . ' y = ' . $y
#		  . ' w = ' . $w . ' h = ' . $h
#		  . ' t = ' . $t . ' s = ' . $s
#		  ) ;
		  
	
#	printf("<-- x,y = $x $y -->\n") ;

	$t = pi*2.0 - $t ;
	
	# adjust x,y for theta and width !
#	$x    += $w * cos($t) - $h * sin($t) ;
#	$y    += $w * sin($t) + $h * cos($t) ;

#	println("<-- eh x,y = $x $y -->\n") ;
	
	my $x1 = int $W * $x ;
	my $y1 = int $H * $y ;
	
	my $x2 = int $x1 + $W * $w * cos($t) ;
	my $y2 = int $y1 - $W * $w * sin($t) ;
	
	my $x3 = int $x2 + $H * $h * sin($t) ;
	my $y3 = int $y2 + $H * $h * cos($t) ;
	
	my $x4 = int $x1 + $H * $h * sin($t) ;
	my $y4 = int $y1 + $H * $h * cos($t) ;
	
	$p =~ s#\$Pictures/Photos##g ;
	$p =~ s#jpg$#shtml#g		 ;
	$p =~ s#bmp$#shtml#g		 ;
	
	push(@map,"<area shape=\"poly\" coords = \"$x1,$y1,$x2,$y2,$x3,$y3,$x4,$y4,$x1,$y1\" href= \"$p\"/>") ;
}

###############################
# process an start-of-element event
sub sh
{
	my ($expat, $el, %atts) = @_;
	if ( $el eq 'node' ) {
		# print('node = ') ;
		$x = $atts{'x'} ;
		$y = $atts{'y'} ;
		$w = $atts{'w'} ;
		$h = $atts{'h'} ;
		$t = $atts{'theta'} ;
		$s = $atts{'scale'} ;
	}
	$src = $el eq 'src' ? 1 : 0 ;
}

###############################
# process a char (string) event
sub ch
{
	my ($expat, $el, %atts) = @_;
	if ( $src ) {
		$p = $el ;
		$src = 0 ;
	}
}

###############################
# process an end-of-element event
sub eh {
	my ($expat, $el) = @_;
	if ( $el eq 'node' ) {
		poly($W,$H,$x,$y,$w,$h,$t,$p,$s) ;
	}
}

###############################
# utilities
sub println 
{
	my $x = shift ;
	print $x . "\n" ;
}

sub error
{
	$x = shift	;
	println($x) ;
	exit(1)		;
}

sub atoi
{
	my $t;
	foreach my $d (split(//, shift())) {
		$t = $t * 10 + $d;
	}
	return $t;
}


# the input is an XML file collage.cxf generated by Picassa
#
# <?xml version="1.0" encoding="utf-8" ?>
# <collage version="2" format="22:17" orientation="portrait" theme="picturepile" shadows="1" captions="0" albumUID="719e22d33254080be558a2d0b85c85ad">
#	<albumTitle>Marin</albumTitle>
#	<albumDate>April 2009</albumDate>
#	<background type="image">
#	  <src>$Pictures/Photos/2009/PointBonita/Pedestrians.jpg</src>
#	</background>
#	<spacing value="0.000000"/>
#	<node x="0.679778" y="0.046153" w="0.205622" h="0.119183" theta="0.000000" scale="210.557190">
#	 <theme>noborder</theme>
#	 <src>$Pictures/Photos/2009/PointBonita/Golden Gate from San Francisco.jpg</src>
#	 <uid>595db86476c19c1c0000000000000000</uid>
#	</node>
#	<node>.........</node>
# </collage>
#

# the output is a <map> file
#
# <img src="/Homepages/2009/MothersDay.jpg" usemap="#MothersDay">	
# <map id="MothersDay" name="MothersDay">
# <area shape="poly" alt="2005" title="" coords="38,84,233,56,2" href="/2005/MothersDay/" target="" />
# <area ............/>
# </map>	
#
