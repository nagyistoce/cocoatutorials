digraph "Graphical Class Hierarchy"
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="std::exception",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="Exiv2::AnyError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classExiv2_1_1AnyError.html",tooltip="Error class interface. Allows the definition and use of a hierarchy of error classes which can all be..."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="Exiv2::BasicError\<\l charT \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classExiv2_1_1BasicError.html",tooltip="Simple error class used for exceptions. An output operator is provided to print errors to a stream..."];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="std::logic_error",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="Jzon::TypeException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classJzon_1_1TypeException.html"];
  Node4 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="std::out_of_range",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip="STL class. "];
  Node6 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="Jzon::NotFoundException",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classJzon_1_1NotFoundException.html"];
}
