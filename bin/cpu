#!/usr/bin/perl -w

#
# cpu path
#
# copies a file to the current directory and ensures it has a unique name
# for example: cpu /path/Carlo.jpg -> Carlo.jpg
#              cpu /PATH/Carlo.jpg -> Carlo_1.jpg
#
# find ../Photos -print0 -name "*Peggy*"                  | xargs -0 cpu {}
# find ../Photos -print0 -name "*.jpg" -path "*Western*"  | xargs -0 lnu {}

#
use strict;
use File::Basename;

my $path     ;
my @paths    ;
my $nPaths   = scalar @ARGV   ;
my $bExecute = $nPaths == 1 ; 

sub syntax
{
	print "useage: cpu path+" . "\n" ;
	exit 1;
}

sub Q {
	my $a = shift ;
	$a =~ s/"/"\\""/g ;
	return '"' . $a . '"' ;
}

sub psystem
{
	my $cmd = shift ;
	print $cmd . "\n" ;
	system($cmd) if $bExecute ;
}

# print "number of arguments = " . scalar(@ARGV) . "\n" ;
syntax() if ! scalar(@ARGV)  ;

if ( $ARGV[0] eq '-' ) {
	while ( $path = readline(STDIN) ) {
		chomp $path ;
		push @paths,$path ; 
	}
} else {
	@paths = @ARGV ;
	$bExecute = 1  ;
}

foreach $path ( @paths ) {
#	print("path = " . $path . "\n")  ;
	my ($base,$dir,$ext) = fileparse($path,'\..*') ;
	
	my $filename = $base . $ext ;
	
	if ( -e $filename ) {
		my $i = 1 ;
		do {
			$filename = $base . "_" . $i++ . $ext ;
		} until ( ! -e $filename ) ;
	}
	
	psystem( "cp " . Q($path) . " " . Q($filename) ) ;
}


# my $path = $ARGV[0] or syntax() ;
# print "working on file $path\n" ;
# 
# my ($base,$dir,$ext) = fileparse($path,'\..*') ;
# 
# my $filename = $base . $ext ;
# 
# if ( -e $filename ) {
# 	my $i = 1 ;
# 	do {
# 		$filename = $base . "_" . $i++ . $ext ;
# 	} until ( ! -e $filename ) ;
# }
# 
# psystem( "cp " . Q($path) . " " . Q($filename) ) ;




