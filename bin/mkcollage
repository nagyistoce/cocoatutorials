#!/usr/bin/perl

# use strict;
# use warnings;

use XML::Parser::Expat;
use File::Basename;
use Math::Trig;
# use Image::Magick;
use Cwd;
    
###############################
# syntax
sub syntax
{
	error("usage: mkcollage name [w]") ;
}
# Description of program at end of file
###############################

sub fixup; # forward

# Get the command line arguments
#
my $name = shift or syntax() ;
my $w = shift or 0 ;
$w = 550 if !$w    ;


# Find the photo and collage data
#
my $home    = $ENV{"HOME"} ;
my $path    = "${home}/Pictures/Picasa/Collages/${name}" ;
my $photo   = $path . ".jpg" ;
my $collage = $path . ".cxf" ;
error("picture does not exist $photo"  ) if ( ! -e $photo     ) ;
error("collage does not exist $collage") if ( ! -e $collage   ) ;

# copy and resample the image
#
system('cp "' . $photo . '" .') ;
$photo = $name  . ".jpg"        ;
system("sips --resampleWidth $w " . '"' . $photo . '"') ;

# get the image properties
#
#my $image = Image::Magick->new;
#   $image->Read($photo);
   
#my $W  = $image->Get( 'columns' ); 
#my $H  = $image->Get( 'rows' );
my $H = "sips -g pixelHeight $photo | cut -d\':\' -f2";
my $W = "sips -g pixelWidth  $photo | cut -d\':\' -f2";
   
println("W = " . $W) ;
println("H = " . $H) ;

my @lines = qx($W 2>&1); $W = int($lines[1]);
my @lines = qx($H 2>&1); $H = int($lines[1]);

println("W = " . $W) ;
println("H = " . $H) ;

# exit(1);

#my $shtml = getShtml ;
#my $head  = getHead  ;
#my $tail  = getTail  ;



# get the page templates
#
$shtml = fixup(getShtml());
$head  = fixup(getHead()) ;
$tail  = fixup(getTail()) ;


# write out the shtml
#
open (SHTML,"> ${name}.shtml") ;
print SHTML $shtml             ;
close(SHTML)                   ;

# and write the .inc with the map itself
#
print ("readcollage $collage $W $H > \"${name}.inc\"" . "\n") ;
system("readcollage $collage $W $H > \"${name}.inc\"") ;
open FILE, "<${name}.inc" or die $!;
my @lines = <FILE>;
#
open (HEAD,"> ${name}.inc")   ;
print HEAD $head ;
foreach (@lines) {
	print HEAD fixup($_) ; 
}
close(HEAD)                   ;
open (TAIL,">> ${name}.inc")  ;
print TAIL $tail              ;
close(TAIL)                   ;


# and show it
#
my $url = getcwd ;
println("url = $url") ;

#
#
system(fixup("open http://localhost/Homepages/__YEAR__/${name}.shtml")) ;


###############################
# utilities
sub println 
{
	my $x = shift ;
	print $x . "\n" ;
}

sub error
{
	$x = shift	;
	println($x) ;
	exit(1)		;
}

sub atoi
{
	my $t;
	foreach my $d (split(//, shift())) {
		$t = $t * 10 + $d;
	}
	return $t;
}

###############################
# page templates
sub getShtml
{
return <<ENDOFFILE;
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<HTML><HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta http-equiv="Content-Language" content="en-us">

<LINK REL="stylesheet" TYPE="text/css" HREF="/page.css">
<link rel="alternate" type="application/rss+xml" title="clanmills rss feed" href="http://www.clanmills.com/1.xml">
<TITLE>Mills Family Website</TITLE></HEAD>
<BODY>

<!--#include virtual="/menu.inc" -->
<!--#include virtual="/Homepages/__YEAR__/$name.inc" -->

</body></html>
ENDOFFILE
}

sub getHead
{
return <<ENDOFFILE;
<div id = "Content">
<div class=boxshadow><div class=boxmain style="width:550px;">

  <table  width="550">
    <tr>
      <td  width="50%">
        <h1>Mills Family<br>WebSite</h1>
        <h4>__DATE__</h4>
        <TABLE class="Content">
          <tr>
            <td valign=bottom><a href="/Homepages/2009/0330.shtml"><img class="button" src="/prev.gif"></a><br></td>
            <td valign=bottom><a href="/defaults.shtml"><img class="button" src="/up.gif"></a><br></td>
            <td valign=bottom><a href="/default-2004-01.shtml"><img class="button" src="/next.gif"></a><br></td>
            <td valign=bottom><a href="/default.shtml"><img class="button" src="/home.gif"></a><br></td>
          </tr>
        </TABLE>
      </td>
      <td width="50%">

      <table>
        <tr>
          <td><img src="/3dflagsdotcom_usa_2fawm.gif" style="border:none;"><img src="/lionflag.gif" style="border:none;"><img src="/scotflag.gif" style="border:none;"></td>
        </tr>

        <tr>
          <td><table><tr><td style="color:yellow">Current<br>Weather<br>San Jose<br>California</td><td align="center">
			<a href="http://www.wunderground.com/US/CA/San_Jose.html?bannertypeclick=miniTarget2">
			<img src="http://banners.wunderground.com/weathersticker/miniTarget2_both/language/www/US/CA/San_Jose.gif" border=0
			alt="Click for San Jose, California Forecast" height=50 width=150></a>
			</td></tr></table>
          </td>
        </tr>
       </table>
     </td>
    </tr>
  </table>
ENDOFFILE
}

sub getTail
{
return <<ENDOFFILE;
<hr>
<table><tr><td width="400">
    <p align="center"><a href="/">Home</a> <a>.........</a>
    <a href="/about.shtml">About</a></p>
    <p align="center">Page design &copy; 1996-__YEAR__ Robin Mills / <a
    href="mailto:webmaster@clanmills.com">webmaster@clanmills.com</a>
    </p>
    <p align="center">Page created: __DAY__ __DATE__</p>
    </p>
</td><td width="150">
<p align="right"><img src="/robinali.gif" align="middle" width=120 border=2 border=0></p>
</td></tr></table>

</div>
ENDOFFILE
}

sub fixup
{
	my $s=shift;
	
    my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime time ;
    
    @WDays  = ( "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday") ;
    @Months = ( "January", "February", "March", "April", "May", "June"
              , "July", "August", "September", "October", "November", "December"
              ) ;
    
    $smon  = $Months[$mon] ;
    $wday  = $WDays[$wday] ;
    $year += 1900 if $year < 1900 ;
    $mon++ ;
    
    my $date = "$smon $mday, $year";
    
	
	my @P  = ( ['__YEAR__',"$year"]
	         , ['__DATE__',"$date"]
	         , ['__DAY__' ,"$wday"]
	         , ['/2012/NewYearsDay'    , '/2011/Christmas/NewYearsDay'] # New Year 2011 correction
	         , ['AppleOffice/IMG_3502' , 'Apple']                       # New Year 2011 correction
	         , ["$ENV{PHOTOS}/"        , '/']
	         );
	for my $i (0 .. $#P) {
		my $p=$P[$i][0];
		my $q=$P[$i][1];
		# http://www.perlmonks.org/?node_id=98357
		$s   =~ s#\Q$p\E#$q#g;
	}

# printf("Time = %02d:%02d:%02d Date = %s %02d.%s.%04d = %02d-%02d-%04d = %04d-%02d-%02d\n"
#        ,$hour,$min,$sec              # time in 24 hr clock
#        ,$wday,$mday,$smon,$year      # UK format
#        ,$mon,$mday,$year             # US format
#        ,$year,$mon,$mday             # international format
#        ) ;
	
# 	$s    =~ s/\__YEAR__\E/$year/g;
# 	$s    =~ s/\__DATE__\E/$date/g;
# 	$s    =~ s/\__DAY__\E/$wday/g;
# 	$s    =~ s/\__DAY__\E/$wday/g;
#   This is corrective code to handle christmas 2011.  Remove later
# 	my $p = '/Volumes/Data/rmills/Dropbox/Photos/2012/NewYearsDay';
# 	my $q = '/Volumes/Data/rmills/Dropbox/Photos/2011/Christmas/NewYearsDay';
# 	$s    =~ s#$p#$q#g;
# 
# 	my $p = '/Volumes/Data/rmills/Dropbox/Photos/2011/';
# 	my $q = '/2011/';
# 	$s    =~ s#$p#$q#g;
# 	
# 	my $p = 'AppleOffice/IMG_3502';
# 	my $q = 'Apple';
# 	$s    =~ s#$p#$q#g;
# 
#   leave this code
# 	my $p = "/Volumes/Data/rmills/Dropbox/Photos/$year/";
# 	my $q = "/$year/";
# 	$s    =~ s#$p#$q#g;

# 	print "-------------------------\n";
# 	print $s;
# 	print "-------------------------\n";
	
	return $s;
}

# That's all Folks!
##
