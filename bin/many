#!/bin/bash

##
#
syntax()
{
	echo 'usage:' $0 '--{nocache|uncache|print|html|editor|viewer}+ [man-options] man-page'
	echo 'eg:   ' $0 printf
	echo '      ' $0 3 printf
	echo '      ' $0 --html gcc
}
if [ $# -eq 0 ]; then syntax ; exit ; fi

##
# parse command-line
# http://wiki.bash-hackers.org/howto/getopts_tutorial#description
page="${@: -1}"
print=1
html=2
editor=3
viewer=4
pop="_pop_"
mode=$html
unset nocache

if [ `uname` == Linux ]; then
	mode=$editor
fi

setMode()
{
	mode=$1
	opt="$pop"
}
setUncache()
{
    nocache=1
	opt="$pop"
}

opt="$pop"
while [ "$opt" == "$pop" ]; do
    opt=$1
    case $opt in
	    -p|--print)  		setMode $print  ;;
	    -h|--html)   		setMode $html   ;;
	    -e|--editor) 		setMode $editor ;;
	    -v|--viewer|--view)	setMode $viewer ;;
	    -n|--nocache)       setUncache      ;;
	    -u|--uncache)       setUncache      ;;
    esac
    if [ "$opt" == "$pop" ]; then shift ; fi
done

temp=/tmp
# ##
# # set up a temporary directory if necessary
# if [ ! -e $temp ]; then
# 	mkdir -f $temp
# fi

##
# test $temp is a directory
if [ ! -d $temp ]; then
	echo "no directory $temp exists"
	exit 1
fi

if [ $mode == $print ]; then
	ps="$temp/$page.ps"
	pdf="$temp/$page.pdf"
	if [ ! -z $nocache ]; then
	    rm -rf $ps
	    rm -rf $pdf
	fi

	man "$@" 2>&1 > /dev/null
	status=$?
	if [ $status -eq 0 ]; then
		if [ ! -e $ps ]; then
			man -t "$@" > $ps
			status=$?
		fi
	fi

	# if OK, got postscript, no pdf and not empty
	if [ $status -eq 0 ]; then
		if [ -e $ps ]; then
			if [ -z $pdf ]; then
				rm -rf $pdf
			fi
	  		if [ ! -e $pdf ]; then
	  			if [[ "$PLATFORM" == "linux" ||  "$PLATFORM" == "cygwin" ]]; then
	  				echo "running gs"
					echo '' | gs -dNOPAUSE "-sDEVICE=pdfwrite" "-sOutputFile=$pdf" "$ps" 2>&1 > /dev/null
					echo "done"
	  			else
					pstopdf $ps -o $pdf
				fi
			fi
		fi
		if [ -e $pdf ]; then
			open $pdf
		fi
	fi
	exit $status

elif [ $mode == $html ]; then


	##
	# kill the old txt and html files
	page=${!#}
	cached=''
	for i in $@ ; do cached=${cached}$i ; done

	f=$temp/$cached.txt
	h=$temp/$cached.html
    if [ ! -z $nocache ]; then
        rm -rf $f $h
	fi

	##
	# is there a file called ~/bin/man<page>.html
	m=~/bin/man$page.html

	if [ ! -e $m ]; then
		# get the man page
		man $* >> $f
		s=$?

		# if it failed, ask perldoc if he knows about it!
		if [ $s != 0 ]; then
			perldoc $* >> $f
			s=$?
		fi

		# if it failed, ask pydoc if he knows about it!
		if [ $s -ne 0 ]; then
			pydoc $* >> $f
			s=$?
		fi

		#
		# if we've found it, format and display
		if [ $s -eq 0 ]; then
#			man2html -compress < $f | sed -e 's/\<BODY\>/\<body style="background:lightskyblue;"\>/'     > $h
            (echo '<html><body style="background-color:linen;"><pre style="color:blue;">' ; col -b < $f ; echo '</pre></body></html>') > $h
            open $h
		fi
	else
		cp   $m $h
		open $h
	fi
elif [[ ($mode == $editor) || ($mode == $viewer) ]]; then
	man "$*" | col -bx > $temp/$page.txt
	if [ $mode == $viewer ]; then
		view "$temp/$page.txt"
	else
		ce "$temp/$page.txt"
	fi
else
	echo "*** don't understand mode = " $mode
fi

# That's all Folks
##
